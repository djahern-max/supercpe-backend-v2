services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: supercpe_postgres
    environment:
      POSTGRES_DB: supercpe
      POSTGRES_USER: supercpe_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U supercpe_user -d supercpe"]
      interval: 10s
      timeout: 5s
      retries: 5

  # New Hampshire Instance
  supercpe-nh:
    build: .
    container_name: supercpe_nh
    environment:
      - DATABASE_URL=postgresql://supercpe_user:${POSTGRES_PASSWORD}@postgres/supercpe_nh
      - STATE_CODE=NH
      - API_TITLE=SuperCPE New Hampshire
      - SECRET_KEY=${SECRET_KEY}
      - DO_SPACES_BUCKET=supercpe-certificates
      - DO_SPACES_ACCESS_KEY=${DO_SPACES_ACCESS_KEY}
      - DO_SPACES_SECRET_KEY=${DO_SPACES_SECRET_KEY}
      - DO_SPACES_REGION=nyc3
      - DO_SPACES_ENDPOINT=https://nyc3.digitaloceanspaces.com
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - STRIPE_MODE=${STRIPE_MODE}
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-service-account.json
      - GCV_ENABLED=${GCV_ENABLED}
      - ENVIRONMENT=production
    volumes:
      - ./states/nh:/app/state_data
    ports:
      - "8001:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: supercpe_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl      # Add this line
    depends_on:
      - supercpe-nh
    restart: unless-stopped

networks:
  default:
    name: supercpe_network
