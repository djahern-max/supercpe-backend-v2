"""Initial Migration

Revision ID: bec89645bef4
Revises: 
Create Date: 2025-06-18 12:39:45.433005

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bec89645bef4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('compliance_requirements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state_code', sa.String(length=2), nullable=True),
    sa.Column('state_name', sa.String(length=50), nullable=True),
    sa.Column('total_hours_required', sa.Integer(), nullable=True),
    sa.Column('ethics_hours_required', sa.Integer(), nullable=True),
    sa.Column('reporting_period_months', sa.Integer(), nullable=True),
    sa.Column('renewal_deadline', sa.String(length=50), nullable=True),
    sa.Column('ce_broker_required', sa.Boolean(), nullable=True),
    sa.Column('effective_date', sa.Date(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_compliance_requirements_id'), 'compliance_requirements', ['id'], unique=False)
    op.create_table('cpas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('license_number', sa.String(length=20), nullable=False),
    sa.Column('full_name', sa.String(length=200), nullable=False),
    sa.Column('license_issue_date', sa.Date(), nullable=False),
    sa.Column('license_expiration_date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('total_cpe_hours', sa.Integer(), nullable=True),
    sa.Column('ethics_hours', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_oplc_sync', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cpas_email'), 'cpas', ['email'], unique=True)
    op.create_index(op.f('ix_cpas_id'), 'cpas', ['id'], unique=False)
    op.create_index(op.f('ix_cpas_license_number'), 'cpas', ['license_number'], unique=True)
    op.create_table('cpe_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cpa_license_number', sa.String(length=20), nullable=False),
    sa.Column('document_filename', sa.String(length=500), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('cpe_credits', sa.Float(), nullable=True),
    sa.Column('ethics_credits', sa.Float(), nullable=True),
    sa.Column('course_title', sa.String(length=500), nullable=True),
    sa.Column('provider', sa.String(length=255), nullable=True),
    sa.Column('completion_date', sa.Date(), nullable=True),
    sa.Column('certificate_number', sa.String(length=100), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('parsing_method', sa.String(length=50), nullable=True),
    sa.Column('raw_text', sa.Text(), nullable=True),
    sa.Column('parsing_notes', sa.Text(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verified_by', sa.String(length=100), nullable=True),
    sa.Column('verification_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('storage_tier', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cpe_records_cpa_license_number'), 'cpe_records', ['cpa_license_number'], unique=False)
    op.create_index(op.f('ix_cpe_records_id'), 'cpe_records', ['id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cpa_license_number', sa.String(length=20), nullable=False),
    sa.Column('stripe_payment_intent_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('payment_type', sa.String(length=50), nullable=False),
    sa.Column('product_type', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('payment_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('payment_metadata', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_cpa_license_number'), 'payments', ['cpa_license_number'], unique=False)
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_index(op.f('ix_payments_stripe_customer_id'), 'payments', ['stripe_customer_id'], unique=False)
    op.create_index(op.f('ix_payments_stripe_payment_intent_id'), 'payments', ['stripe_payment_intent_id'], unique=True)
    op.create_index(op.f('ix_payments_stripe_subscription_id'), 'payments', ['stripe_subscription_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('license_number', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('auth_provider', sa.String(), nullable=True),
    sa.Column('oauth_id', sa.String(), nullable=True),
    sa.Column('oauth_access_token', sa.Text(), nullable=True),
    sa.Column('oauth_refresh_token', sa.Text(), nullable=True),
    sa.Column('oauth_token_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('profile_picture', sa.String(), nullable=True),
    sa.Column('user_metadata', sa.JSON(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_license_number'), 'users', ['license_number'], unique=False)
    op.create_index(op.f('ix_users_oauth_id'), 'users', ['oauth_id'], unique=False)
    op.create_table('cpe_upload_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cpa_license_number', sa.String(length=20), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('session_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('documents_uploaded', sa.Integer(), nullable=True),
    sa.Column('documents_processed', sa.Integer(), nullable=True),
    sa.Column('total_credits_found', sa.Float(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cpe_upload_sessions_cpa_license_number'), 'cpe_upload_sessions', ['cpa_license_number'], unique=False)
    op.create_index(op.f('ix_cpe_upload_sessions_id'), 'cpe_upload_sessions', ['id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('license_number', sa.String(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('stripe_price_id', sa.String(), nullable=True),
    sa.Column('plan_type', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('current_period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('current_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancel_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('canceled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('subscription_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscriptions_id'), 'subscriptions', ['id'], unique=False)
    op.create_index(op.f('ix_subscriptions_license_number'), 'subscriptions', ['license_number'], unique=False)
    op.create_index(op.f('ix_subscriptions_stripe_customer_id'), 'subscriptions', ['stripe_customer_id'], unique=False)
    op.create_index(op.f('ix_subscriptions_stripe_subscription_id'), 'subscriptions', ['stripe_subscription_id'], unique=True)
    op.create_index(op.f('ix_subscriptions_user_id'), 'subscriptions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_subscriptions_user_id'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_stripe_subscription_id'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_stripe_customer_id'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_license_number'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_id'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_cpe_upload_sessions_id'), table_name='cpe_upload_sessions')
    op.drop_index(op.f('ix_cpe_upload_sessions_cpa_license_number'), table_name='cpe_upload_sessions')
    op.drop_table('cpe_upload_sessions')
    op.drop_index(op.f('ix_users_oauth_id'), table_name='users')
    op.drop_index(op.f('ix_users_license_number'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_payments_stripe_subscription_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_stripe_payment_intent_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_stripe_customer_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_cpa_license_number'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_cpe_records_id'), table_name='cpe_records')
    op.drop_index(op.f('ix_cpe_records_cpa_license_number'), table_name='cpe_records')
    op.drop_table('cpe_records')
    op.drop_index(op.f('ix_cpas_license_number'), table_name='cpas')
    op.drop_index(op.f('ix_cpas_id'), table_name='cpas')
    op.drop_index(op.f('ix_cpas_email'), table_name='cpas')
    op.drop_table('cpas')
    op.drop_index(op.f('ix_compliance_requirements_id'), table_name='compliance_requirements')
    op.drop_table('compliance_requirements')
    # ### end Alembic commands ###
